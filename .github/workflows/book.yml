# Workflow for building and deploying the Jupyter Book documentation
# This workflow is triggered on push events and performs the following tasks:
# 1. Builds Jupyter Book documentation from notebook files
# 2. Builds Marimo interactive notebooks and exports them to HTML-WASM format
# 3. Combines all artifacts and deploys them to GitHub Pages

name: deploy-book

# Trigger the workflow on push events
# This ensures the documentation is automatically updated whenever code changes are pushed to main
on:
  push:
    branches:
      - main


# Default permissions for all jobs
# Restricting to read-only access for security, with specific permissions granted where needed
permissions:
  contents: read

# This workflow contains multiple jobs that run in parallel and sequentially
jobs:
  # Job to build the Jupyter Book documentation
  # This converts Jupyter notebooks to a static website with navigation and search
  jupyter:
    runs-on: ubuntu-latest
    steps:
        # Set up the Python virtual environment with all required dependencies
        # This uses a reusable action from the cradle repository
        - name: "Build the virtual environment for ${{ github.repository }}"
          uses: tschm/cradle/actions/environment@v0.1.71

        # Build the Jupyter Book using a reusable action
        # This action handles the book building process including configuration
        - uses: tschm/cradle/actions/jupyter@v0.1.71


  # Job to build Marimo interactive notebooks and export them to HTML-WASM
  # This creates interactive web applications from Python notebook files
  marimo:
    runs-on: ubuntu-latest
    steps:
      # Set up the Python virtual environment with all required dependencies
      # This uses a reusable action from the cradle repository
      - name: "Build the virtual environment for ${{ github.repository }}"
        uses: tschm/cradle/actions/environment@v0.1.71

      # Convert the Marimo notebook to HTML-WASM format
      # The WASM format allows for interactive elements to work in the browser
      - name: Convert notebook to HTML
        run: |
          uv run pip install --no-cache-dir marimo
          mkdir -p artifacts/marimo
          # Note: The HTML export is commented out in favor of HTML-WASM
          #uv run marimo export html app.py -o artifacts/marimo/index.html
          # Export in edit mode to allow users to modify the notebook
          uv run marimo export html-wasm notebooks/boring.py -o artifacts/marimo --mode edit
          # uv run marimo export html-wasm notebooks/boring.py -o artifacts/marimo/boring.html --mode edit
          # ['marimo', 'export', 'html-wasm', '--mode', 'edit', 'notebooks/penguins.py', '-o', '_site/notebooks/penguins.html'

      # Upload the generated HTML-WASM files as a GitHub Actions artifact
      # This makes the files available for the deployment job
      - name: Upload HTML artifacts
        # Note: This conditional is commented out but would skip upload when running locally with act
        #if: ${{ env.ACT != 'true' }}  # Skip if running with 'act'
        uses: actions/upload-artifact@v4
        with:
          name: marimo
          path: artifacts/marimo
          retention-days: 1  # Keep artifacts for 1 day to save storage


  # Job to combine all artifacts and prepare them for deployment
  # This job runs after both jupyter and marimo jobs have completed
  build:
    permissions:
      pages: write            # Permission to deploy to Pages
      id-token: write         # Permission to verify deployment origin
    runs-on: ubuntu-latest
    needs: [jupyter, marimo]  # This job depends on both jupyter and marimo jobs
    environment:
      name: github-pages
    steps:
      - name: Publish book
        uses: tschm/cradle/actions/book@v0.1.71
